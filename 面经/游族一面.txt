（
    先给了份Go的试卷，我有很多不会，是我自不量力了
    大概包括切片等基础类型的理解、gRPC、读已关闭的channel、逃逸分析、反转链表填空、实现队列、实现生产者消费者模式、解释Redis网络模型
）
自我介绍
为什么被调去做工具
工具项目的介绍
什么时候开始不想做工具
主要的契机是什么

讲一下做过最大的系统
    排行榜是基于Redis去实现的，分为两种。一种是全量的，所有上报过来的玩家都要保存，另一种是只保存前几百个的
    我们是做了单独一个排行榜服务器，玩家打完关卡之后和他自己记的之前打的分数比较，如果当前打的比之前打的要大，那就上报到排行榜服
    Redis是用了Zset，就是一个有序的集合数据结构
    另一种是前几百的嘛，这种我们是直接用map，做在进程里面的
map是用什么做key的
    key就是分数、时间戳、UID，value就是玩家的信息
key是不固定的是吗，就是你是吧key更新之后再排序的
    map本身就是排序的，map底层是一个红黑树，所以它遍历是有序的
那对于一个玩家的数值更新呢
    玩家上报一个分数，我们会比较这个分数和当前排行榜上最低的分数哪个大
    如果玩家上报的分数太小了，就丢弃掉
    如果这个分数比最低的分数大，先看之前这个排行榜上有没有这个玩家——就遍历一遍——如果有就删掉，再把玩家新的分数重新添加进去
    如果之前没有这个玩家，就把最低分给删掉，再把玩家给添加进去
量大吗，有没有什么瓶颈点
    这个不大
如果对这个排行榜的数据结构做一些优化，有没有更好的方式
    低于最低分的消息其实是浪费掉了，我们可以在玩家的server上面缓存一个排行榜最低分数。上报之前先比较一下和缓存最低分数是不是比它大，如果大了再上报
就是从排行榜的数据结构上有没有可能，假设排行榜上的前100的人非常活跃，一直在变
    其实可以加一个哈希表，就是unordered_set，用来判断玩家之前是不是在榜上
还有没有更优化的，你这只是知道玩家在不在这里面。因为你每次插入删除都要修改这个红黑树
    （那总不能我自己实现个跳表或者红黑树吧）
    红黑树有什么问题吗，因为它插入和删除只是涉及到几次旋转
就是操作还是比较多嘛，当前你前面那个遍历查玩家在不在榜上是最大的问题
    实际上看业务倒还好，因为我们排行榜业务没有这么多
主要看量，就是如果这个活动是一个非常高频的，短期内非常高并发的活动
那Redis排行榜排序是怎么实现的，Zset是怎么实现的
    Zset它底层数据结构是跳表，就是在双向链表的基础上加了很多层的索引嘛。上层的索引的节点数会比较少，查找起来就比直接遍历原来的链表要快
除排行榜之外其他功能有没有涉及，因为排行榜本身功能是比较单一的，有没有更加复杂一点的，玩法上的，因为排行榜其实跟游戏玩法关系不大
    涉及到玩法的话，其实都是做一些增删改查的
那排行榜有没有发奖的功能
    有的
这种是直接由排行榜服来提供，还是由玩法那边
    有一些活动可能放在一些单独的，一个全局服务器上吧。上面会有定时器，就是到某个时间，或者到活动结束的时候给它结算一下
    结算的时候就是把排行榜给拉过来，然后根据玩家的名次给他发奖励
排行榜不驱动，就是玩法自己来拉
（有一段没听清）因为涉及到发奖一般都会有一个截止时间
    还有一种，就是玩家服务器上面自己判断时间，如果发现这个活动已经到时间了，而且还没有结算，这个时候就去排行榜查一下他的排名
（有一段没听清）假设活动时间到了排行榜还会变
    倒不会有这种情况，因为活动时间到了就不往排行榜上报了
就是完全通过活动本身自己来控制的。就是没有一个结算协议发给排行榜是吗
    没有，我们排行榜还是负责它自己的内容，就负责维护排行榜
刚刚那种情况其实存在一些可能性，比如说活动结算时拉了，但还没有完全结算完，但可能这个时间点在玩法里面还有继续上报过来的还没写，这两者之间可能会有小概率出现时间差的
    可能就是机器时间差得很多的情况
也不是，可能就是真的负载比较高，导致后面的处理来不及。可能结算要的榜已经给过来了，但是剩下的数据还没写完
    哦，其实有些活动结算和活动关闭可能有一些时间差，比如我活动结算前3分钟就不给往排行榜去上报了
这是活动本身做的，活动结束时间的控制对吧。那排行榜本身有没有，如果我活动本身没有这个时间差，有没有解决的方法
    排行榜本身其实也可以维护一个开始时间和停止时间，就是上报的时候判断一下是不是在停止时间之前
排行榜有没有备份之类的功能，就是一期之类的概念，同一个榜
    有的，不同期就算是不同的排行榜嘛，我们会给排行榜一个ID，如果不同期的就是不同的ID
就是排行榜这边其实就是一个排序的功能，排完序数据结构放那
那这个功能其实还是比较简单，那线程模型是怎么样的
    排行榜会有一个ID嘛，我们会对排行榜ID做一个哈希，就是不同线程负责不同一部分的排行榜，会通过排行榜哈希给它发到某一个线程上
这个数据库用的什么
    会写到Redis里面
就是只到Redis这一层是吧。写Redis是同步的还是异步的
    我们是把写Redis消息给投到一个单独的worker线程
那个是所有的排行榜都共用是吧

做工具这段时间你觉得最大的收获是什么
    因为工具这边我是从零设计的，包括它的架构还有各种实现，我先去踩一遍坑啊，中途会做一些迭代吧，就是锻炼了我的设计能力
    工具它是涉及到很多职能啊，包括运营、策划、QA，可能向我提一些反馈，提一些需求，我要去跟他们沟通，比如这个需求合不合理，有哪些不清楚的地方，也是锻炼了我的和别人合作的能力
这种需求可能挺难的吧，各种各样的需求，会不会有一些冲突的地方
    有可能吧，我们其实分成很多功能，一般也就是提不同功能的需求，除非多个职能的都在用同一个工具，他可能考虑的方向不一样
有没有一些功能可能需要频繁修改的
    有个发数值的功能修改得挺多的。就是把数值文件传到服务器和客户端的
能大概讲讲修改的历程吗
    前端会改得比较多，前面可能就是某一个服去发，后面他们提了个需求，要批量去发，多个服、多种数值类型一起发
写工具的时候代码上会有一些要求吗
    我是模仿了Python的官方规范制定了我的规范，还有一些业务的注意事项吧，还有引入了一些静态检查工具、自动格式化的工具，方便参与到项目的其他同事嘛
做这个有几个同事
    除了我之外还有两三个，他们做一些小的内容，大部分还是我来实现的
他们是临时帮你做吗
    临时帮我做，就是一些校招生，先让他们熟悉项目，练练手

你不想做工具这个事有跟team说吗，有提过诉求吗
这个事其实，不离职也能做这样的事情啊。你可以把文档写完，把你的诉求跟leader说嘛
这个有跟leader明确表达过吗，leader的反馈是什么
空窗期做了什么
    准备一些东西吧，比如复习算法
现在手上有offer吗
    有一家刚过了HR面了，有一家过了二面了
那会不会继续让你做工具
    这个面试的时候我肯定要问清楚
反正就是工具就不做是吧
    不是说完全不能做，但不能只做工具
除了工具本身，技术栈，和别人沟通这方面，其他技术之外的有没有一些收获
    就认识了更多的同事吧
比如为什么要做这些工具，什么样的工具能提升研发的效率
    我会看前端有什么改进的部分吧，可能操作上面有些比较繁琐的地方，我想着怎么给它优化，类似于UI工作一样的东西
这还是从你做的工具本身看是吧，就哪里好用哪里不好用

那你觉得对生产力提升最高的工具是什么
    拷贝账号吧，这个用的人挺多的
    它是可以把指定的玩家从一个服拷到某一个服。当然我们只会从线上拷到线下某一个测试服，线上服是不给写入的
那这个是从数据库读的
    是从数据库读的
    可能QA有一些测试，可能线上有一个玩家出了BUG，可能想拷到线下复现看是什么问题。也可能是线下做了一个账号，可能走到某个流程了，这个账号需要经常地复用，所以需要一个拷贝的功能
涉及到版本变更，数据结构发生变化的有吗
    我们数据库字段倒不会变，我们主要是proto里面变，用proto把它序列化之后存到数据库的，proto可以做到向后兼容
这里会有多个版本吗，因为新的导老的服没问题，老的导新的服呢，如果涉及到数据变化可能还是会有问题
    我这里能读到proto多个版本，根据区服什么版本的，就是可以给用户选择你要使用什么版本的proto（其实拷号功能没管这些，完全靠proto向后兼容）
这个是跟游戏版本走是吗
好像这种还是比较琐碎是吗

平常玩游戏吗
你喜欢玩什么
    我比较喜欢动作类的吧
最近玩什么
    血源
挺硬核啊
对自己未来做什么类型的游戏有诉求吗
    我对游戏类型倒没什么要求
对工作本身只要不是做工具，尽量是做游戏业务就可以了是吗

MongoDB有用过吗
    很久以前用过的
当时主要是用在什么地方
    我实习公司的一个项目吧，它会用来存一些用户数据
你当时有用分片吗
    因为数据量还比较小的，当时就没有分片
Mongo的文档，对底下的存储引擎有了解吗
    就了解到应该是BSON吧，二进制JSON这样的东西
这只是数据结构嘛

Golang有实际用吗
    说实话才学了一点，就是把官方的Go之旅给看了，目前还在看一些文档，接下来准备把官方标准库看看有什么功能
    （经典我不会但我可以学，但至少要表达已经开始学了，学到哪里，接下来的计划）
还没有实际的开发是吧，主要的开发工作就C++和Python

C++对野指针、内存泄露一般会怎么去排查
    内存问题的话我们开发版的话是接了ASAN这个东西。就是如果遇到内存相关的问题，它会打一个错误日志，生成一个coredump，方便我们去排查
你们（上家项目）的内存分配用的是什么
    后面是接了tcmalloc，之前都没接
C++几个智能指针能大概讲一下吗
    主要就是unique_ptr、shared_ptr、weak_ptr
    unique_ptr是单纯用RAII的机制保证它能正确释放吧，它是代表一个独占的所有权，一个只能有一个对象持有这个指针
    shared_ptr它是有一个引用计数，它是共享所有权，就是可以有多个shared_ptr指向同一个对象
    weak_ptr它是为了解决循环应用的问题的，shared_ptr如果有循环引用那就不能正确地释放。weak_ptr它是只持有一个管理块的指针，不直接持有对象的指针，使用它的时候需要用它来获取一个shared_ptr指针
对于右值引用你觉得什么情况下使用
    主要是你需要移动的情况，并且它占的空间是比较大的，它不好拷贝，但移动起来会比较快
    （可以补充一下转移所有权的用处）

你们数据库用的是MySQL是吗
表结构很简单
    用户数据都挺简单的
分库分表还是怎么做的
    我们是分了10个库，每个库10个表。它是根据UID去哈希的，UID最低一位是表的ID，第二位是库的ID
这个UID的分配是
    UID它是直接从数据库的AUTO INCREMENT去拿的
就单独有一张表是吧
索引上都比较简单是吧
    用户这边没什么索引，基本就是主键吧
那你在做一些工具的时候会涉及到哪些，就自己的数据库
    工具这边数据库还挺复杂的，因为可能每个查询条件都不一样
有没有碰到一些，数据量会有大一点的表吗
有没有在索引上出过问题
    那倒没有
一般什么情况会出现索引失效
    字符串的模糊搜索在前面用了%
    或者联合索引不符合最左匹配的原则
    或者用了否定的查询条件
    还有用了OR条件，里面用到了没有索引的列
    还有对于索引列用了函数计算或者类型转换之类的功能

整个工作经历有没有碰到一些特别棘手的事，或者解决之后特别有成就感的事
    做过一个挺复杂的系统，它是一个周报的系统，可能每周要结算一下上一周获得了什么成就，获得了多少货币之类的
    它是涉及到很多个进程的，可能每个活动结算时间又不一样，要考虑结算的时候能不能找到这个玩家对应的数据
所以是怎么设计的
    最后就是在Redis做一个缓存吧（乱说）
    该结算的时候，比如上线的时候发现过了该结算的时间点，就会给Redis去上报一下
是由谁来上报
    就玩家服务器这边，上线的时候会去查一下
    或者就是临近这个时间点的时候，设置一个定时器，到那个时间去上报
上报哪些内容呢
    就玩家之前记的一些内容吧
这些内容是通过什么方式来记的
    玩家是分各个系统嘛，周报数据是从很多系统来的，那些系统结算的时候我就会加一个回调，回调到我的周报系统
那些系统结算本身是为了周报去结算的吗
    没有，就是它玩法的结算
那这些数据是结算就直接能用了吗，还是周报还要加工一下
    可能是每周要结算一次，就先把这些数据给缓存下来，过了那个时间才去上报
我是指在周报这里对于这些上报的数据是要做二次加工吗，还是把数据收集过来，该怎么展现就怎么展现好了
    不怎么加工，因为上报的时候都给处理好了，需要什么就上报什么
那上报的时候是周报的工作，还是系统自己来给的
    我是在每个系统里面去插一个回调嘛，调到我的周报系统里面，在我的周报系统里面自己去解决
就是它的每周的活动结算的时候调你的回调函数是吧。有没有不一定是活动来触发的，比如这一周获得了多少经验，升了多少级，可能和活动没什么关系
    想这种就是在获取经验的那个函数里面插一个回调吧
那会涉及到很多地方改这个东西是吧
    是的，就非常麻烦，因为涉及到很多地方，可能会有一些老的代码你不太敢去动的。这种情况我就会找些这些代码的负责人去问问他们的意见，改完之后再给他们review一下
你是怎么防止因为周报这边上报出问题，导致业务出问题的，因为这些是在玩法之外，额外的东西对吧
    我是尽量保证我这边不会阻塞流程吧，万一我这边出了什么BUG也不会给它搞出一个错误来
它是直接走到你的回调函数吧，为什么不走异步的方式
    觉得这样比较方便吧，因为异步还要添加一堆消息
虽然添加消息，但不影响原来流程啊
    有一些东西是只在结算流程里面才能拿到的，可能过了这个流程数据就全部销毁掉了（这个解释不太好，发消息的时候可以把这些数据拷贝一份）
还是需要同步访问系统里面的数据是吗

反问
    会用什么技术栈或者框架吗
        我们这边主要都是Golang的技术栈
    都是自己造的
        对，基本都是自己造的
    有什么难点吗
        难点可能更多的是做复杂业务的时候，纯粹的技术难点新项目可能会有，老项目的的话大多数还是不会有这种比较明显的技术问题
        你是希望有难点还是希望没难点
            有一点，但不要太难
    平时工作氛围怎么样
        我个人感觉还挺好的，基本上大家关系都挺好的，至少在服务器这边，大家都挺融洽。个人跟个人之间，我觉得摩擦多多少少都会有的，但还是对事不对人
        你比较看重的是什么，有什么诉求吗
            就比较轻松吧，不希望太卷
        不希望太卷的意思是不希望加班
            那是一方面，主要就是不想内耗什么
        你觉得怎么样算是内耗，有一个度，在你看来什么样的算是内耗
            想工作的时间能够尽量高效吧，可能不希望开一堆没用的会之类的
        大概简单介绍一下，我们这边研发流程会肯定是有不少的，对需求的会，XXX的会……然后每天早上都有早会，周一还有周会

你觉得自己个人最大的优势是什么
    （Go水平这么差，只能表达自己学习能力强了）
    我觉得我学习能力还挺强的，因为我之前是从（大学）里面出来的嘛。工作中也是现学了不少技术，比如Jenksin我之前就是没有接触到的，都是工作中学到的


------
这个凉了也没什么好说的，是我自不量力来面Go的岗位了
