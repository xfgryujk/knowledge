（这家屁事挺多的，HR看我写了Python觉得可能不专一，那我两个都会不是更好吗）
自我介绍

我看你写的（上家项目）是一个全区全服架构是吧，它是怎么设计的呢
    我的理解就是所有的玩家都在一个区服里面，这个区服有所有的服务器，然后它们通过一个中心的路由服务器连接起来吧
它是分区的吗
    我们会根据运营和渠道的需求去分一些区，比如安卓服、iOS服这样
它不是滚服的是吧
它DAU是多少（这是可以问的吗）
    这个是比较敏感的信息，这个要保密

你后面找工作对未来有什么规划
    目前还是希望做游戏业务相关的，也是想在技术上再深造一下
加班吗（你问问题把上下文说完整啊）
    游戏行业加班还比较普遍的，只要不是单休或者天天加班都可以
我们是995（你好意思说出来）
你们是用C++对吧，有没有接触过Lua
    学过一点，但是自己没有正式使用过吧

C++里面有一些常用的容器，像vector、list、map，它们的优点、缺点呢
    vector是一个可以动态扩容的数组，它的优点是可以随机访问，缺点是如果在中间插入或者删除一个元素，就要把后面的元素全部移动一遍
    list是一个双向链表，它的优点是插入删除会比较快，但是不支持随机访问
    map是一个红黑树，可以表示一个映射关系
map能用来排序吗
    可以，map本身是有序的
它的key可以是一个结构体吗
    可以，只要定义了比较函数

你之前用C++遇到过哪些内存方面的问题
    像越界啊，释放之后还在使用啊，释放多次啊，内存泄露都有吧
一般来讲释放内存是用delete，delete和delete[]有什么区别呢
    delete是释放单个对象嘛，delete[]是释放用new[]申请出来的一块数组内存
    如果混着用的话可能会报错，因为运行时库会检查你是不是乱用了，乱用就会报一个运行时错误
如果开发人员写错了，释放数组时用了delete，会造成什么结果
    （怎么问未定义行为啊，太low了，我说我试过总挑不出错了吧）
    这个我试过的，运行时库会调用abort函数，然后整个进程退出
你在哪个版本试的，哪个平台
    GCC啊，Linux的

（用摄像头拍了一道题，问类大小的。又是经典用int、short，不用int32_t这种标准长度类型）
    （把每个成员大小、对齐填充大小、整个类对齐填充都解释了）

（另一道题，用memset初始化一个类，类里面有个string，有什么问题）
    这个class它不是标准布局的，它不能用memset去初始化（其实是标准布局的，但问题不在这）
标准布局是指什么
    就以前叫POD嘛，后来是改成标准布局了。因为你用了一个string，string里面会有一个指针，你又没为string的指针分配一个内存，这么初始化的话，里面的指针是空指针

Lua是没怎么用过是吗
快速排序是怎么排的
    快排的思想是每次找出一个元素，然后把左右两边分成比这个元素小的、比这个元素大的，再分别对左右两边递归地分下去
堆排序呢
    堆排序是堆原数组建一个最大堆，然后每次把开头最大的元素删除，再把它添加到数组末尾

TCP是怎么进行流量控制的
    流量控制是接收方会有一个缓冲区大小，然后接收方会在确认包里面，把自己能接收的窗口大小告诉给发送方，然后发送方发送的时候不能超过这个窗口大小
客户端进行连接的时候会进行三次握手来建立这个连接，那建立连接的过程中，服务器的listen和accept是怎么工作的
    listen相当于是服务器这边开了一个端口嘛，然后等待连接。三次握手之后，新的socket它是放到了服务器的accept队列里面，然后accept函数就是用来接受accept队列里面的一个socket
epoll了解吗。epoll有哪两种工作方式啊
    有水平触发和边缘触发。水平触发就是这个缓冲区还可以读时就会一直报告这个可读的事件。边缘触发就是当这个缓冲区第一次可读时会报告，但是如果应用层没有读完这个缓冲区，那下一次就不会再报告这个事件了

你之前在（上家项目）的时候接触过MySQL吗
你用MySQL做哪些业务呢
    就玩家数据都是存在MySQL的啊
Redis是做哪些业务呢
    Redis主要是一些缓存吧，一些可以丢弃的数据。比如玩家卡片之类的，因为一些玩家数据可能会给其他玩家查看
卡片是道具吗
    不是，就玩家一些简要信息
像MySQL查询时会有一些慢查询查得比较慢，一般怎么去优化呢
    慢查询的话，先用explain看它的执行计划，看它可能用了什么索引，扫描范围是怎么样的。看它是否是全表扫描，还是索引扫描。然后再看有没有索引失效之类的吧。索引的话去看具体是用了哪些字段啊，比如联合索引它可能有ABC，但是如果查询条件不符合最左匹配的话，可能只用了其中一部分索引。基本上就是尽量让它走索引，如果用了索引还是很慢的话，说明这个表可能本身比较大，这时候考虑分库分表啊，读写分离之类的优化
了解隔离级别吗。有哪些隔离级别，能解决哪些问题
    有读未提交、读已提交、可重复读、串行化。读未提交就是什么问题都不解决，它什么问题都会有。读已提交是解决脏读的问题。可重复读是解决脏读和不可重复读。串行化是解决脏读、不可重复读、幻读
间隙锁是怎么产生的了解吗
    间隙锁是只在可重复读、串行化下面才会有的。间隙锁是为了防止幻读问题的。就是读一个数据，然后可能刚好读到了两个索引之间吧，读完之后为了防止幻读，就要保证其他事务不能插入到这个间隙里面，所以要加一个间隙锁

之前用Redis做排行榜是吗
Redis排行榜同积分怎么解决
    同积分就是插在前面吧，还是后面
我的意思比如A也是50分，B也是50分，同积分的顺序是怎么确定的呢。策划希望谁先到谁在前面要怎么做
    这个是把时间戳和积分给编码在一起吧，因为Redis的score它是double的数据类型，比如可以把前面几位用作分数，后面几位用作时间戳，把它们给编码在一起
前面几位啊，如果分数超过了32位还能这样搞吗
    不能，所以就是用于一些分数比较小的情况。或者说给时间戳一个范围，比如就从2020年开始算，算出一个时间戳

看过MySQL的源码没
你们服务器是用多线程吗还是单线程
业务编程也是多线程吗
    我们单个玩家是用单个线程
两个玩家之间是多线程吗
    我们会按玩家的UID给分发到某一个线程上面，一个线程只负责一部分玩家，但是对于单个玩家来说，它的逻辑是只运行在一条线程上的
那比如好友的一些业务是怎么做
    这些涉及到多个玩家的，我们是给它放在单独一台服务器上

你都看过哪些源码啊，开源的代码看过哪些
    skynet看过一点算吗
看过哪些部分
    看了一下它的消息分发过程吧
它怎么分发的呢
    它消息会有一个全局的队列，全局队列里面是次级消息队列，次级消息队列是对应于每个Actor的消息。会有多个worker线程，worker线程每次从全局消息队列取一个次级消息队列，然后去消费次级消息队列里的一条或多条消息。消费完之后如果还有剩余的消息，再给它塞回到全局队列里面

给你出个题啊，有一个全局变量，初始化是1，有两个线程。B线程是一直打印它的值，某一时刻A线程把变量改成2，A线程完成赋值时候，B的打印是不是马上变成2
    不会。这个涉及到内存可见性的问题，因为CPU本身会有乱序执行吧，就是写完之后另一个线程读的值可能不是最新的
怎么让它得到最新的呢
    可以加一个内存屏障
具体怎么加呢
    （乱说的）比如B读之前加一个内存屏障，读之前所有的写指令都要完成啊。A也加一个，比如写之前所有的写指令都要完成啊
有没有比较简单的方法呢
    用原子操作吗
更简单的有没有
    （有比原子操作更简单的？C++的volatile也没这个效果啊）没有吧

你在（上家项目）里面开发过哪些业务
死循环检测怎么做的
    它是类似于看门狗的功能，每个worker线程处理完消息之后，会去更新一个时间戳。另外有一个监控线程去监控所有线程的时间戳，如果这个时间戳很久都没有被更新，说明这个线程可能是死循环了

说到死循环我想到最近一个问题啊，比如两个英雄，A英雄放个技能有A效果，它会触发A事件，它会让B英雄释放B技能，B技能有B效果、B事件，这个B事件同样会让A释放A技能。这样的也会构成一个死循环，这种循环我们要怎么去发现它，解决掉呢
这里每个英雄它的技能效果都是策划配的表，你做游戏应该也知道这种做法
    其实可以用拓扑排序啊，其实就是形成了一个环，如果拓扑排不出来那就是有环
有没有什么方法能解决掉呢
    这个配置本身是有问题的，就不应该这么配。但如果解决的话，可能调用一个事件的时候可以记一下是什么事件去触发的这个事件，如果调的时候发现了一个环，就可以报错了，就不继续往下执行

现在呢618快到了，像京东这种企业都会做一些促销活动，比如商品在618当天晚上20点开始，限量50件秒杀，这个系统你设计的话怎么设计呢
    （我面游戏服务器还要问电商秒杀？）可以用Redis去存这个商品的计数。就来一个请求把它的计数给扣一下，并且判断是不是变成0了吧
但是可能会有一个玩家买多次
    （你也没说要去重啊）还要去重是吧，可以在玩家的数据上面记一个标记，就是他有没有买过这个东西
但是访问Redis是一个异步的过程，它这个可能是不这么准确的
    就是玩家身上可以先记已经买过这个商品，再去扣Redis里面的数，如果扣完回来发现这个数已经变成0或者小于0了，那么这次购买是无效的，再把这个标记给去掉

你平时会经常连一些WiFi这种信号，连WiFi的时候一般来说是需要输密码的，这个WiFi密码是怎么输入进去的
    （我面的不是游戏服务器吗？）啊，不清楚

你们是用protobuf是不是
protobuf你改造了吗，还是原生的协议去写的
    我们协议是在protobuf的基础上面再封装一层，就是给它加上消息头长度、消息体长度这些
比如protobuf里面消息有两个成员，都是int类型的，a、b初始值为1，这个结构它序列化之后长度是多少，了解吗
    我记得protobuf它本身会存类型、tag还有长度和值之类的。数字的话它好像是用一个变长的编码，类似于UTF-8这样。具体是多长我忘了
你看过pb的源码没有
    我了解编码大概是怎么样吧

你们用Redis是用集群还是单点
Redis里面有没有执行过Lua相关的业务
    我们没有这么复杂的业务

你们这个是偏单机玩法的，也就是大部分内容都在客户端吗
    我们服务器这边主要就是负责存储和校验
一般都是这样啊
    像战斗都是完全由客户端来的。我们有很多外围系统，一些活动什么的，这些小活动的逻辑大部分是在服务器上面
战斗完全是客户端做的对吧，那怎么反外挂，怎么知道战斗输赢
    战斗结果完全都是客户端报上来的，但是我们会做一些加密的措施，也会做一些统计。像反外挂这块我们会有一个动态分发脚本的功能吧，就是临时加一些脚本检测客户端加载了哪些模块，有可能你加载了一些作弊模块就给它检测出来，然后上报
意思是在客户端做一些反外挂的措施对吧，在客户端进程里面检查有没有第三方插件
    这些检测脚本我们是动态下发的嘛
是从服务器动态下发是吧。都是检查哪些内容呢
    主要是内存中加载了什么模块吧
正常来讲客户端会加载什么内容，会跟你这个脚本做一个对比是这个意思吧

反问
    你们用的技术栈是怎么样的
        C++跟Lua
    基于skynet的吗
        不是，我们是底层全部是自研的。skynet一般网易会用，然后阿里那个游戏部门会用，其他的一般广州那边公司用得比较多，深圳那边一般都不用
    平时工作氛围是怎么样的
        游戏是已经上线的游戏，现在工作是比较规范的，所有的工作要把好质量关。自己测，测好了就提交。对质量的要求是比较高的
    你们可能会遇到什么难点
        大多数人都是做一些业务相关的，难点的话基本上普通开发很难接触到，基本上工具开发之类的都是比较完善的。我们服务器是在Windows下，Windows下有一些情况，外网运行时偶尔会有一些问题。正常来讲现在难点基本上解决完了，可以认为现在基本上没有什么难点。如果是去年的时候又能有一些难点，现在基本上处理完了
    有没有考虑迁移到Linux什么的
        这个产品已经上线了，并且用户量很大，这个产品不大可能迁。下一代的游戏都是用Linux，都不再用Windows


------
我的评价就是纯八股文，基本没问到项目具体怎么实现的，甚至问电商秒杀、WiFi，有点离谱
