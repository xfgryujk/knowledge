自我介绍

之前的项目介绍
介绍一下协议频率限制和死循环检测
    解释了令牌桶算法
    死循环检测是类似于看门狗的机制，如果worker线程一段时间没有更新时间戳就判断是死循环了

死循环之后有什么处理方式
    监控线程打日志，触发告警，服务器人工介入。先留在那里，因为要定位现场，我们要查日志，或者查一下栈，看哪里卡住了然后修复代码和更新

协议频率限制是针对玩家还是针对进程
    针对玩家，主要是限制一些耗时比较多的协议，比如抽卡。可以配置限制哪些协议，限制频率是多少。
限制频率的目的是什么
    防止有些开挂刷奖励，还有恶意攻击消耗服务器资源这种行为
    面试官指出令牌桶可能不能区分出恶意请求。不太理解
    也有防止服务器负载太高的作用吧
怎么决定哪些协议要用这个功能
    运营会评估哪一些功能可能是需要限制的
    实际上用到的不多，但是有时候处理一些问题会用到，比如某个协议除了一个BUG，想临时禁用这个协议

介绍一下协议缓存
    这是针对一些全服的活动，有一些状态是存在一个全局的服务器上，我们不希望它负载太高
    有一些不重要的协议，就是进入活动时去服务器拉一下，然后缓存起来，如果有其他用户请求就直接返回缓存
    面试官说其实就是类似于数据缓存吧，比如排行榜拉到之后放到你本地。差不多

讲一下Asio定时器的实现
    它定时器怎么实现的我不清楚，但是我知道定时器有两种实现，堆和时间轮（不会的问题不要慌，说一下类似的方案！）
介绍一下堆和时间轮怎么实现的
它们有什么优势，适用于哪些场景
    个人认为堆允许每一次时间跨度比较长，比如从0到1w这样跨过去，时间轮要一格一格地走，可能要循环1w次
    面试官指出那也可以把格子设置得大一点，甚至可以设置不同的阶梯。不太理解
    复盘时感觉可能堆允许的时间精度更高吧，而时间轮精度只能和格子一样

介绍一下服务器的架构
玩家选择gateserver和gateserver选择gameserver有什么依据吗
    选择gateserver是根据版本和渠道信息，还有负载均衡
    玩家把版本和渠道信息发给dispatch，它找到对应的区服，从多台gate里面选一个负载最小的
dispatch是单点还是有多台的，可能存在多登的情况吗
    多登的情况是通过Redis去重的，gameserver登录完毕时会往Redis储存当前登录到哪一个gameserver。用的是CAS操作，如果失败了说明有其他gameserver登录上了，就会拒绝这次登录
那么怎么顶号
    gateserver查询Redis看是否在某一个gameserver登录上了，那么把请求发给这个gameserver。gameserver发现是两个不同的客户端登录的，就会把原来的给踢掉，然后替换成新的客户端

你们是全区全服吗，数据是怎么存储的，所有的玩家存到同一张表还是分库分表
    实际上会根据运营需求和渠道需求分一些区服，每个区服玩家数据是分开存的，UID区段上会有一些规定
扩容的话怎么办
    运维会手动往MySQL配置里写一个UID区段，让某一个区服在这个区段里面分配

protobuf格式里存的是什么
    有一个tag和一个value吧，主要是这些，可能还有一个类型
    （确实不了解，可以参考这篇文章 https://www.cnblogs.com/protosec/p/11673328.html）

介绍一下协议测试机器人
    介绍了原来C++版的机器人的缺陷，改造成了Python版有什么优点

玩家下线时有异步任务没有完成不让他下线，你们解决问题了吗
有没有可能处理完之后又过来一个异步任务
    目前没有这种需求，就客户端过来一个请求可能会开异步任务去处理，如果客户端没有请求就不会主动创建异步任务

对Python了解吗  挺了解的（得意了一下，瞬间被打脸）
那讲一下它的内存管理（以为要问Python层的东西，怎么问了C层的）
    你说GC吗（面试官想问内存池的，我不了解，拐了一下话题）  你可以讲一下GC
（调动脑子里所有关于GC的知识现编了）
    Python是引用计数和GC结合的，如果引用计数到0就直接可以回收了，如果有循环引用就要靠GC
    GC的时候就是stop the world，然后从栈那里开始染色，把引用到的对象全部染色一遍，剩下没有被染色就是可以被回收的
那对象变多了你这个GC过程是不是越来越耗时
    听说Java有分代回收，不知道Python有没有（有的）
那假设创建了一个非常大的列表然后释放掉，它使用的内存会不会立刻回收掉
    （面试官想问内存池了，但我没反应过来）
    因为有引用计数，如果这个列表没用了，那它就回收了
那内存是会还给操作系统吗，它取决于什么
    （还是没反应过来）
    实际上C语言的malloc也是不一定会还给操作系统的
你有看过相关的内容吗，就是Python自己的内存管理
    没了解过这么底层的
（内存池和GC可以参考这篇文章 https://zhuanlan.zhihu.com/p/164627977）

看你也使用过一些Python元编程的技巧，假设一个class要实现函数重载，有什么办法可以实现
    可以用类型标注，把类型标注作为一个元组，存到dict里面，调用的时候根据实参的类型去dict里面寻找相应的函数调用

假设有一个索引，是复合索引ABC，在查询里面只用到了AC，那这个索引会使用到吗
    会用到A
是只用到A吗
    是用A查出一段范围，然后另一个条件是C，C也是在这个索引里面的，所以就是索引覆盖了，所以C也会判断
    就是确认这个扫描范围的时候不会用到C，但是判断条件的时候会用到

你们Redis是集群吗
    我们有不同的实例，看情况吧，不同业务用不同实例
讲一下跳表的实现
插入数据时怎么生成这样的结构
    每插入一个节点有1/4的概率生成上一层，然后又有1/4的概率生成上上层

讲一下Go的协程原理
    你是说GMP吗  介绍了一下GMP模型
那创建了一些协程它是怎么分配和调度
    应该是找一个比较短的本地队列插入进去吧，然后M如果本地队列没有任务了，会去其他P偷一些任务，如果没有任务可以偷再去查询全局队列
    调度的话有
        主动调度
        调用系统调用时Go会插入调度代码
        协作式调度，Go会在每个函数开头插入调度点，如果执行时间太长会被调度
        新版是加了一个基于信号的抢占，执行时间太长了监控线程会发一个信号让你调度
怎么知道Goroutine的执行时间太长了，有什么标准
    监控线程会看Goroutine的执行时间吧（没太明白，可能是问过多少ms才算执行太长）

为什么游戏刚上线就准备找机会
    聊了一下离职原因

你有自己去了解市面上的服务器解决的问题和它们常见的解决方案吗，你有去了解寻路吗
    没有（这里寻路没听清，如果听清的话应该会回答AStar算法）

场景同步相关的内容呢
    （面试官想问AOI相关算法，我没反应过来）
    我听说有一个ECS系统  介绍了一下ECS系统（不会的问题不要慌，扯一下显示自己知识面很广！）
    守望先锋是用了这种架构，它们用这种来解耦服务器的一些功能的
我说的其实是视野管理，比如MMO会有一个大场景，玩家有一个可见范围
    这个有了解，就是AOI嘛（还好前一天恶补了AOI算法知识）
    介绍了一下九宫格、灯塔、十字链表

九宫格移动时怎么处理
    如果没有跨过格子边界就不用修改
    如果跨过了，算出新的格子和旧的格子，把旧的格子删掉，添加新的格子，然后通知新的格子里的实体，有这个玩家进入了
它一定是用九个格子这种形式吗
    也可能有菱形这种吧，就是形状可以变化一下

十字链表是怎么实现
    比如往X方向正方向移动，判断我的坐标和链表下一个结点坐标哪个大，如果超过了就和下一个结点交换，Y方向也是一样的
你说的是数据的管理，那移动前后我怎么去管理我的视野
    就是沿着X方向和Y方向找出一定范围内的所有实体，然后X方向和Y方向做一个交集就是玩家能看到的实体

这两种使用场景上差别在哪
    我觉得九宫格更适合比较密集的场景，否则很多格子是没有实体的，那就浪费掉了
    面试官指出如果地图不是非常大的话，那成本也不是很高
    具体还是不太了解，MMO没怎么接触
    （AOI算法可以参考这篇文章 https://zhuanlan.zhihu.com/p/201588990）
就是你做游戏服务器和做工具，面对的问题会有很大的区别
    游戏也是分很多类型的嘛，（上家）做的都是偏单机的，就是可能没有视野这种概念

那你们有好友功能吗，按你想的设计方式会怎么设计它的实现，因为好友关系是双向的嘛
    我们好友数据不是存在玩家身上，是存在Redis里面
那是登录时要重新拉取一遍是吗
有些逻辑是不是要等到数据拉取完之后才处理
    我们会用一个异步的协程操作
    也不一定是协程，拉取完成会有一条消息，处理这条消息的时候就可以执行了

讲一下你做过的印象最深或者有挑战性的系统
    说了周报系统，涉及到很多系统的统计，首先要去相应的地方看懂代码，然后加入自己的回调
其实是类似玩家的行为统计是吧
它的难度在哪里
    涉及到很多地方，包括结算的时机也是需要自己掌握
    （感觉说得太简单了，又补充了一下）像复杂的代码的话我会找做这个功能的负责人，问问他的意见，应该怎么改。然后写完之后再给他review一下

有处理过线上的问题吗
    我们会收到一些告警，或者玩家报告的BUG，我们会登录到服务器上面查日志，然后对着代码看看可能会有哪些问题
    也是要和QA合作，QA会把玩家数据拷到一个测试服上面，看看能不能复现
会出现回档的情况吗
    很少出现，我们有定时存储，也有一部分如果修改了重要的数据就会主动触发存储，比如充值或者抽卡
那本质上还是定时的，如果在这期间服务器挂掉了，岂不是还会回档
    其实大部分操作丢了就丢了，重要的是关于充值或者抽卡的数据
如果有些不重要的操作，玩家就是会找上来，你们会怎么处理
    事先做好一些运营修改数据的措施吧，会给内部平台提供一些接口，通过平台去给玩家发补偿
    当然不是玩家说了就发，我们会通过日志做一些核实

你们线上出现过内存异常的情况吗，一般是怎么处理
    内存异常会生成coredump嘛，我们会收到告警，然后用gdb看coredump运行到哪里了，再看一下代码大概是出了什么问题，再去修复
    我们会评估一下如果有些经常使用的功能如果会触发coredump的话，会有功能开关将这个功能暂时禁用掉
如果没有发生coredump，只是内存泄露，要怎么处理
    这种一般开发的时候就会定位到了，开发的时候会用那个忘记叫啥了（Valgrind）
    它的原理就是在申请内存和释放内存的地方加hook，如果进程结束的时候申请过的内存没有被释放，那么会报错并写入日志

你是比较喜欢做服务器吗

今天面试就到这里，后续HR会通知你
（没有反问环节，把我吓了一跳，还以为凉了。应该是面试官看已经到时间了，不想超时）


------
把简历上写的游戏服务器相关东西全都问了
没有算法题，主要还是看游戏服务器相关的知识面，包括底层、中间件、游戏相关问题和算法、线上运营经验
3小时后收到二面邀请
