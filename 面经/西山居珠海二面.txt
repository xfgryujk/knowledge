（面试官迟到了10分钟）
自我介绍
离职原因

这个（上家项目）是已经上线很久了吗
只是在维护是吧
    一直在做更新的
你做了什么工具能不能简单说一下
这个一般不是中台部门做吗，为什么你们游戏部门会做啊
    中台毕竟离项目组比较远嘛，他不是在项目组里面开发的，不知道我们有什么痛点。我们希望找一个既熟悉服务器开发，又懂做一些web工具的人
之前有接触过web开发吗
    大学时自学了一点
后端都是用Python写的吗
这个你做了多久啊
    一直在迭代的，像策划、运营、QA他们会有需求提给我，或者我们自己开发时发现有什么痛点就去迭代一下

比如发送GM命令，在和游戏对接时是怎么设计的，能说一下吗
    它是原本我们服务器就有GM命令的功能，但是原来是只有客户端能发的
    我们服务器还有一个HTTP的接口，所以就在HTTP接口上面增加了一个执行GM命令的功能。它的参数就是你要给哪个UID发命令，还有命令是什么
    然后我这边的实现就是从前端接收到这个发命令的请求，然后自己构造一个HTTP请求去请求我们游戏服务器
那怎么知道这个命令要发到哪个服呢
    我可以拿到游戏服务器的配置，就是它的IP还有端口
比如要发一个踢人的命令的话，那是要发到哪个服务器上，这是怎么决定的
    我这边就是拿到游戏HTTP服务的接口（被打断）
你不是有很多服务吗
    是有很多服务，就是很多个进程嘛。我们客户端连接就是普通的TCP连接这种（其实是UDP + KCP），也会有单独一个进程是用HTTP服务的，它专门用来给内部的工具还有平台提供接口
我的意思是你们有很多服嘛，我发一个命令我怎么知道应该往那个服发，执行的时候具体是要在某一个进程上执行
    这个和我们的架构有关，我们架构里面有一台nodeserver，它是连接了服务器内部各个进程的
    nodeserver上面会保存玩家的一些信息，用来路由。就是某个UID登录到某一台服务器上这样的信息
那不是发给玩家的呢，比如要重新加载配置的话，你们有这个需求吗
    有这个需求，但不是用HTTP实现的。它是用SSH协议给一些服务器发命令，加载配置就是给服务器发一个SIGHUP的信号
你要指定是哪一个进程吗，还是哪一类进程
    我们加载配置肯定是所有进程都加载嘛
我的意思是随便输一个，比如gameserver吧，假设有10个，我要发一个命令到gameserver上去加载配置，你是给一个一个选吗，还是无脑广播
    就无脑广播，所有都会执行
你们没有做过滤吗，还是你们的命令不会重复，还是本身就这么设计的
    （没听懂）
就是比方说有没有可能我两个进程的GM命令是一样的，我这个服上的命令是ABC，另一个服也是ABC，但是它们的功能不一样，有没有这种可能
    没有可能

那能给我说一下游戏的架构吗，你说它是全区全服，这个架构你能说出多少出来
    介绍了一下架构
你的全区全服概念，一个区有多大
    我们区服是根据运营需要或者渠道需要去分的，比如安卓一个服，iOS一个服
你们按照这个架构的话，承载量有没有预期过是多少
    应该有限的吧，但具体数据我不记得，我记得一个压测的数据（被打断）
全区全服的话，你的客户端都连着网关，你的网关肯定有一个承载上限的
    我们有多台的
那网关的分配是基于什么规则
    我们是dispatch那边会根据客户端的版本、渠道，还有gateserver的负载均衡去分配
可能灰度有一个版本，然后指定连到某个进程，是这样吗
    因为不同区服可能有不同版本
你不是全区的架构吗，gateserver还要负责多个区吗
那客户端和dispatch的连接是TCP还是HTTP连接
假设gateserver有100个，dispatch这个东西只是简单地分配一个gateserver给它是吧
    就是返回给客户端它可以连到哪个gateserver
那假设我强制把客户端退出，然后又打开，我怎么知道原来连到哪个gateserver上
    不需要在同一个gateserver上，只要gameserver是同一个就可以了
那一样，gameserver怎么知道原来是哪一个呢
    这个我们是把信息存储在Redis里面，Redis会存这个UID是登录到哪一个gameserver
就是说gateserver上验证时，我发现玩家没有，就去Redis查一下对吧
    它是客户端登录的时候我去Redis里面查一下它登录到哪个gameserver，如果查到了就直接发到这个gameserver，如果没有查到就根据一致性哈希去选择一个
为什么会选择一致性哈希啊，这个随机的负载均衡是不是更好，或者用最小玩家数之类的
    我们是尽量想把一个玩家分配到一个gameserver上吧
    随机一个也行，就是比如多个客户端同时登一个号的话，在同一个gameserver里面处理会比较好
那你们不踢号吗
    是会顶号的
我就像知道你们想尽量把一个UID分配到一个gameserver的目的是什么
    我觉得一方面是考虑到万一Redis挂了可能会丢一些数据吧，分配到同一个gameserver尽量可以保持它还是在那一台gameserver上，不会突然变成另一台
那就是有多台gameserver了，那gameserver和其他server之间通讯的时候通过nodeserver转发是吧

那这个nodeserver转发时提供什么样的功能呢
    就路由的功能吗，它可以随机路由啊，通过一致性哈希路由啊，还有指定发送到某一个ID的服务器上
举个例子，比如有多个dbserver可以随机选一个是这个意思吗
那你们具体使用什么发送方式是怎么决定的
    是业务决定的，就gameserver编码的时候你应该清楚用什么发送方式
那你们有主从的模式吗
    没有
那存在单点吗
    有单点的服务器吧，比如有一些全局的活动
那如果宕了怎么办，有没有考虑
    主要还是把保存数据的时间尽量缩短一点
你们活动的这个服是干嘛用的呢
    全局的活动嘛，比如说开一个国战之类的活动，它每个点位会有一定的血量，专门记这种血量的服务器
哦还是有业务功能的是吧

比如我们拿dbserver举例，dbserver应该不止一个吧。听起来你们dbserver应该是用一致性哈希选择的是不是。那dbserver落盘的时候，存MySQL的时候是即时的吗，还是异步的
    异步的
那一个玩家到这个上面去存一下，假如这个dbserver宕掉了，我下一次会存到另外一台上去，会不会出现数据不一致的情况
    我们还是以MySQL为准的，dbserver只是起到一个限流的作用吧
    MySQL里面每个玩家有一个版本号的，就data_version。然后存的时候比较一下版本号，如果是大于数据库中的版本号就可以存进去，如果小于等于原来的版本号就不能存
不能存的错误怎么处理呢
    不能存的话就直接忽略掉了，因为这种情况下就是有其他dbserver可能写进去了，它写进去一个新的数据，那你旧的数据不能把新的数据给覆盖掉呀
那假设正在存的时候我这个服宕掉了，假设这种极端情况啊，那从架构上去讲，有可能尽量保证这个数据不丢失吗
    这个我们是这样解决的，就是dbserver存完以后会给gameserver发一条消息，表示我存了哪个版本的数据
    gameserver保存的时候，其实gameserver本身是有一个缓存的。保存的时候需要等到dbserver给你回复一条已经成功的消息，才可以把这个缓存给清掉。否则如果没有收到这条消息，就会定时去发一个保存消息
就是有一个超时机制是吗

下面你写了一个网络线程、逻辑线程，这是干嘛的
    我们网络线程负责读写封包，然后根据消息里面的UID，通过哈希分配到某一个逻辑线程上
    我们会保证同一个玩家的消息是分配到同一个线程上的，这样一个玩家就只会在一条线程上处理，就不会有多线程的问题了
你们这种底层的东西，那每一个都知道它的UID吗，这个是怎么绑定的
    消息头部里面有一个UID的字段
那你这个只是针对gameserver的吧。那比如对最开始的那一条消息怎么办呢
    登录的话，首先会有一条认证的消息嘛，认证消息就是随便找一台gameserver都可以
    它是随便找一台，最终是转发到了dbserver这，dbserver再去数据库读一下它的UID
我是说你的网络层，用UID哈希的话，这时候用哪个逻辑线程去处理
    认证消息的话我们是分配到第一个线程
你确定是这样写的吗
    对，因为认证消息的话，它相当于是无状态的嘛，随便哪一条线程都可以
那除了这个之外，比如说ping包的消息呢
    ping包这个是带有UID的
也就是你们除了认证之外其他的消息都是带UID的
    大部分都是带的吧
那就是有带有不带，不带的话就是固定到一个逻辑线程上去处理
    不带UID的话说明它就与玩家无关了，像这种的话，gameserver里面我们都是分配到第一条逻辑线程
你们这是转发消息，那写消息呢，给客户端回消息
    就往网络线程对应的那一个发，就网络线程从哪一个收的，就给他发回到哪一个线程
你们的接口，比如我在逻辑线程发送的话，逻辑线程的接口是什么样的。我给到的是玩家的UID，然后给到网络线程的话，是找到类似于session、socket ID去发的吗
    对，就是玩家对象里面是有一个session ID的
那整个架构里面，你负责的有哪个东西，还是架构层面的都没有，你只是去开发业务逻辑
    架构层面没有动过，我是开发进程里面的东西
那就是这个东西都是你自学的是吧
    （你们做服务器开发不用懂架构的吗）就跟着团队学的吧，我们文档上面这些东西都比较全

你觉得你做过最复杂的功能是什么
    排行榜吧，这个我比较熟
说说这个排行榜，你排行榜是怎么设计的，需求是怎么样的，简单说一下
    排行榜是基于Redis去实现的，用了Redis的Zset，它比较适合排行榜嘛
    我们的需求就是排行榜都是实时的，它是分为两种，一种是全量的，所有玩家都要保存，一种是只保存前几百个这样
那全量就挺吓人的啊
    说是全量，其实就是参与玩法的那些玩家的量
    我们会有一些PvP玩法，它会分成很多很多个等级段，每个等级段里面本身人就比较少，会参与玩法的就更加少
那全量的你们预估的量级是多少，你在开发的时候就要考虑，比如老大就问你这个能承载多少，有没有预估过
    是根据DAU去估计的吧（乱说）
DAU去估计，你不是按照……你可以跟策划去battle一下，比如可能有1kw在线，那不可能把1kw都存进去吧
    啊是的，比如这个等级段有多少人，看它活跃的有多少人，比如会做完每日任务的人有多少，大概会这样
那假设筛出来有100w，怎么评估这个100w怎么做全量排序呢
    实际上没有这么多人（被打断）
哦这个是项目上线之后你去参与的是吧，没有经历过开服之前这种数据预测
那Redis现在这个承载的压力是OK的是吧。就是每个level，每个数据变化的时候去Redis告诉它，然后去排序
    玩家本身是存了一个他自己关卡里面最大的分数，然后新打了一次关卡，我们会比较一下新打的分数和原来的分数哪个大，如果分数变得更大了，那就向Redis去上报一下
你这个排名是按照什么排
    就是分数嘛
分数是实时在变吗
    就是打完关卡会变一下
那你知道Redis Zset是用什么算法算的吗
    它底层的数据结构是跳表
你能说一下这个跳表吗
    跳表就是在原来链表的基础上，加了多层的索引的结构。它上层的话数量会比较少，查找的时候可以根据二分查找一样的算法去查找
那算法的复杂度、空间复杂度知道吗
    空间复杂度是O(1) （又嘴瓢了）
    然后查找的算法复杂度是O(logN)
    呃空间复杂度应该是O(N)，就是跟节点数一样
那影响算法效率的是，我这个分数变化大，还是变化小
    查询的话，就分布得均匀一点会更好
有没有可能跳表满足不了需求，这个东西我可以抽出来自己写
    像是小型的排行榜，比如前一两百人的，就是自己实现的
前一两百你们是怎么实现的
    我们是用map，以它的分数、时间戳、UID作为key，value就是玩家的信息
map是个排序的map吗，直接用自带的map去排序是吧
那有人进入100，有人要退出100，你们是怎么判断的
    就是要添加到榜上的话要先判断一下，你和当前榜上分数最小的那个人，哪个分数比较大
    如果你的分数小于当前榜上分数最小的人，那就不添加到榜上
    如果分数比他大，那就先看一下原本有没有这个人。如果原本有你这个人就把原本哪个节点删掉，然后重新添加。如果原本没有你这个人，那就把你添加到榜上，然后把分数最小的给删掉
如果是分数一样怎么办
    分数一样我们是通过时间戳，还有UID去去重
这里面有个问题是我们服务器是怎么知道目前最小的分数，因为分数一直在变
    我们是有单独一个排行榜服务器的
你们是所有的分数无脑地往这个服务器发，由这个服务器来判断
    就是如果你打的分数比你之前的大，那就会发
所以你们没有做过滤，所有的分数还是会往这个服务器去发
我提一个问题啊，现在这个数据量太大，服务器卡顿比较多，有什么优化的方案吗
    也可以分成多个节点吧，就是每个节点负责一部分榜单。我们榜单会有一个key，根据key的哈希来分配到不同节点
我现在说的，假设就一个榜单，这个量级非常大，只是一个假设啊，我服务器的QPS太大，要怎么办
    我觉得这个还是分查询还有写入吧，查询的话可以在gameserver上给它做一个缓存
    就缓存榜单数据，因为一个榜单大概就一两百吧，可以全部缓存到gameserver上
这个方案我不接受，你再想想，还有什么其他的方案吗，因为缓存数据要很谨慎，就很容易出现数据不一致
    其实如果达到这个量级的话，排行榜可以做成非实时的，先把分数之类的数据记下来，但不是实时去排序的，可能定时排序一下
我给你一个方向啊，之所以一个服务器扛不住，是因为有太多的数据发过来，我要想办法把这些数据在发之前就做一次节流，按这个思路去想怎么做
    哦，比如gameserver上可以存一个这个榜单上最小的分数嘛，要超过这个分数才去发这个请求
那这个分数要怎么同步呢，同步的策略是什么
    排行榜这边处理过之后发现最小分数变化了就给gameserver广播一下
你这个量级也非常大啊，可能最低分数不停在变化，有没有这种可能
那我改一下需求，假设现在有很多很多在线的，我要做top 100w，100w的人不停往上面发消息，那你要不停往gameserver上发消息。就假设啊，我不想让它同步频率这么高
    其实也可以定时去发一个最小的吧
会不会有问题，比如排行榜上最低分数是100，缓存的分数是99，会不会有问题
    呃我们这边分数是不会下降的
99是前一次同步给你的，然后100还没有来得及同步，这样会不会有问题
    可能就是多了一些没用的请求
就直接在服务器上过滤掉是吗。那你再捋一下这个方案，把这个方案完整地产出一下
    （突然醒悟）其实可以换一种思路，如果发现gameserver突然给你传了一个比当前最小分数还要小的分数，说明它的数据可能记了一个更加小的，这个时候可以给它同步一下当前真正的最小分数，这样是不是更好
那还有一个问题啊，你有多种排行榜，那假设多种都部署在一个服务器里面，要怎么做呢
    排行榜会有一个ID嘛，存一个最小分数的话就是存一个map这样的东西，以排行榜为key，最小分数为value
就是每个排行榜会有一个最小分数了对吧

除了排行榜还写过其他什么
    协议频率限制可以吗，就我们会限制玩家发请求的频率
服务器限制还是客户端限制
你说一下思路是什么
    （介绍了一下令牌桶算法）
是一刀切吗，无论什么协议都不能发得过快
    是的
这个是怎么衡量的，怎么去界定该发多少
    是先有了运营数据，然后通过数据做一个统计，最大的消息频率可能会有多少
最大的消息频率是怎么界定的，一秒多少还是怎样
    是一秒多少
那有的时候会出现10秒都没有，但是可能一秒有很多请求，会不会有这种情况
    令牌桶就是解决这个的，令牌桶是允许有一定的突发请求，平时如果不发的话，令牌就会慢慢积累
令牌就会慢慢积累，就是说可处理的协议数量吗
    （又解释了一下令牌桶算法）
听起来像是速率的算法
    （没听懂）
那岂不是我积累的时间越长，可以发的越多
    对，就是很长一段时间没有发请求的话，可以突然一下发很多个。突然发很多个会消耗掉它的令牌，之后发请求的频率就必须要低一点
这个是解决什么问题
    我们主要是不想有一些恶意的玩家，突然发很多消息去消耗服务器的资源吧
比如我创建1w个号去连接同一个服务器，我10分钟之后突然一下子全部开始发
    因为令牌桶是有一个最大的容量上限吗，即使突然发的话也不会超过一定值
那超过了你们要怎么处理呢
    每个线程会有一个消息队列嘛，消息队列长度也是有限制的，超过长度限制也是会丢弃新的消息
如果有一个业务是依赖于前面的协议，前面的协议丢掉的话，那后面协议执行起来岂不是会很奇怪
    我们每一个请求可能会有相应的条件，我们处理的时候会判断它条件满不满足
    如果前面的消息丢了，可能这个条件不满足，就会判断这次请求失败
这是你想出来的还是实际上这么做的
那工作量会不会很大，因为每个协议发上来要完全检查一下它的前置条件
    是啊，做服务器肯定要严谨一些吧，比如某一个条件不达成的话是不能给玩家发奖励的
那假如我业务就很复杂，按照你这个套路走不下去，因为有各种各样的复杂业务根本不知道要怎么检查，那你要怎么解决这个问题。比如我做了某个协议我都不知道会发生什么神奇的事情，你说加容错，加处理，这个工作量太大了，做不了，要怎么改方案
    （没太理解）我们丢了任何一条消息都不会让他卡住的
    就是流程不会阻塞，可能你重启一下客户端然后重新请求，就可以走下去了
我的意思是你不用局限于你们的项目，在一个新的项目去解决这个问题，现有的经验已经解决不了了，换一种思路怎么去解决。就是把消息丢掉这种思路行不通，怎么解决
    其实可以把恶意的玩家给踢下线，然后保证数据完整性
那你这个拦截是在哪个层面上去做呢
    网关这边
那你要踢下线要怎么实现呢
    也是通过发消息去实现啊
发消息给逻辑这边，让他踢下线，然后呢
    呃，也有一种方法就是直接把连接给断开了。因为我们会有心跳的机制，如果一段时间没有心跳就把它踢下线了
可是踢下线又重连上来了呢
    哦，其实我们有一个黑名单的机制
是自动的吗，还是要人工介入
    人工介入的
    万一发现这种一直在重连，一直在请求的，就给他加一个黑名单
你是怎么判断他是恶意攻击呢
    我们是通过这个限流的
限流然后你是怎么知道的
    因为我们会有一个统计吧，就是正常玩家最高请求频率大概是多少，超过这个频率很多的话说明可能是恶意的请求
接下来流程会怎么走
这个东西限流之后有没有告警呢
    我们会打一个错误日志，打错误日志后我们运维那边会有一个告警
有错误日志就告警吗，那你们这个项目还挺严格的，一般来说上线之后莫名其妙的error一大堆
    （啊你们不管告警的吗）我们也是一直在迭代吧，如果是真的没有问题的话就修改一下，把它的告警标准给下降

你对工作的话，有没有想做游戏什么方面的呢
    我还是做游戏服务器吧，主要是想做业务开发的
你现在做这些工具的话是做得不好吗，还是这个需求对自己没有提升，还是这个东西是一个边缘的
    多方面吧，一方面是因为我觉得做这个工具可能对我们项目贡献不大，另外一方面做这个东西它可能涉及到的技术很少，不好提升自己吧
你做工具也有一年多了吧，游戏是做了两年
你毕竟做了一年多，你觉得这个工具对自己最大的提升是什么。会不会因为一些技术难点，找人去问，加班去搞啊
    它主要是涉及到很多个职能的沟通吧
    比如我要操作游戏服务器，我会找运维要接口
    像是运营和策划那边都会给我提一些需求啊，我做的时候就会跟他们及时同步啊，及时沟通哪一些需求没有弄清楚的
你们为什么会向运维要接口，他们会做什么东西
    运维主要就是管我们线上的服务器啊，还有云服务的一些资源啊
比如说呢，要什么接口
    我们要操作服务器的话，运维会有一个agent，他会在每个服务器上面部署一个agent，可以执行一些命令或者读写文件之类的
沟通比较多对吧
    另外就是涉及到的技术会比较杂吧，像是SSH命令啊，像是云服务的SDK啊，比如阿里云的OSS，还有AWS的S3嘛，涉及到各种API的调用
那你自己是想去专注于某一个语言对吧
    我对语言倒没什么要求
我看你现在语言也涉及到不少
那你还是没有回答我刚才，你觉得自己在工具开发中学到了什么
    因为这个主要就是我来负责，整个架构，还有设计都是我来做的
    这个过程中就是锻炼一些设计能力吧，还有跟各种职能沟通也是锻炼了我的和别人合作的能力
就是都是你一个人做的吗，整个项目组
    像基础的框架还有大部分实现都是我做的，后面是有一些人来帮我做一些小的功能吧
这个因为你是全新的吗，之前也没有项目经验，基础框架搭建的时候，过程当中你会重构一些东西吗
    比如我们这个服务器是一个HTTP的服务器嘛，它是会接收请求处理请求，请求每个参数可能有一些限制，比如一次查询多少条，这个不能超过一定数量
    这种参数的验证会很繁琐，我不想每个接口都把它给写一遍，所以设计了一个自动校验请求的东西吧
    它是用了一些现成的方案，比如pydantic吧，它可以用Python的类型标注的功能，去解析你的JSON里面的字段类型。还可以指定一些比如最大值最小值之类的参数，用这个库来进行请求参数校验。我是把它给封装了一下然后整合到我的框架里面

你们的客户端与服务器，服务器与服务器之间通讯，协议定义是一样的吗
    是一样的，就protobuf，是客户端和服务器共享的
协议头呢
    协议头也是一样的
客户端到服务器有加密吗，有压缩吗
    有加密
解密是在哪里做的，知道吗
    解密也是在网关
那服务器跟服务器，比如gameserver跟nodeserver发消息的时候，nodeserver还要负责解密是吧
    内部的消息就不解密了，就我们跟客户端的通信会有加密
这个加密算法是什么
    它首先用RSA来进行密钥交换，密钥就是一个4KB的二进制字符串，它加密是用异或的
用异或的，这效率高吗
    挺高的啊，就异或嘛
那别人如果知道了会不会破解啊
    是可以破解
RSA的话，密钥是存在客户端吗
    就是每个连接会有不同的密钥吧
谁来生成密钥
    我们服务器这边会生成密钥
你知道有什么专门的算法用来加密，而不需要服务器介入的
假设他不能反编译你的代码，他可以截获你的协议尝试去破解
    （“不能”没听清）但是那客户端发的时候必须要加密啊，加密的代码就是在客户端上，他反编译肯定能知道的
假设客户端发了个协议给服务器，我把它抓下来了，我随便改几个字节发到服务器，服务器会发生什么
    因为随便改的话可能是一个坏的包，坏的包我们就直接拒掉了

我看你还写了什么物品掉落概率的东西，我们会经常做一个，策划会配一个权重，这个怎么实现
    权重，策划可能是配了一个树吧，我们会把这个树变成一个权重表，每个物品掉落的权重表（被打断）
    根据权重随机去抽取是吧，我们是用前缀和，就是对于整个物品列表做一个前缀和，然后随机一个权重吧，用二分查找看这个随机出来的权重落在哪个区间
前缀和是怎么理解
    就是第一个物品的权重，然后第二项是第一个权重加第二个权重，第三项是第一个 + 第二个 + 第三个的权重是多少
然后随机出来，怎么知道它落到哪个项目
    就二分查找啊，我们随机是从0随机到总的权重和（减1）
实际上就是一段一段的，我随机出来一个数看它落到哪个区间嘛
为什么用二分查找呢
    呃二分查找快啊
这是你自己想的吗
    我自己想的。实际上的话不是用二分查找，我们是用遍历的
对啊我们也是用遍历啊，这种小的权重你用二分查找简直是小题大做
    （看业务，也不是很小吧）
    我的想法是对于静态的权重树的话可以用二分查找，但是实际上我们很多的需求都是动态的权重，那就只能动态去生成了
一般这种权重也不会超过几个，10个或者5个

你也提到学了什么代码规范，这个你能说一下吗
    就我们做游戏服务器可能要注意的一些事情吧
    比如我们有一个规定，操作玩家数据的时候必须要先扣后加，就是先扣他的货币什么的，再加物品。这样就是保证万一中途崩溃了，或者出现了什么意外的BUG，那也不能利用这个漏洞来刷物品
你们的代码规范里面写到这么细的东西吗（你们没写吗）
你们代码规范里面都会涉及到哪些内容呢
    包括代码风格啊，包括做一些业务的注意事项啊，命名的规则都有
假设你到了另一个项目，代码规范又不一样了，你会怎么做
    这肯定是按照项目的规范去做
比如命名这个事情，能举一些你觉得命名不好的吗。这个项目里面看到这个命名就想骂他
    （第一反应是代码整洁之道，不过这里就不说这么详细了）
    比如说可能用了一些很小众的词吧，还要查一下这个词是什么意思
小众是英文吗，还是拼音
    都是英文啊
    或者就是这个命名很繁琐啊，比如明明类名已经有一个名字，然后类名里面一个成员名还要再把类名给重复一遍
你的意思是RoomMgr里面addRoom可能改成add是吧
    不是，可能这个函数就叫RoomMgrAddRoom这样，函数名把类名给重复了一遍
你没有问过吗，为什么要这么写。可能是为了好检索
    有可能吧，我没问过
那你会照着这个写吗
    没有，主要就是看一些常用的源文件是怎么写的吧，根据原来一些人常用的代码规范去模仿他们

你这个技术栈里面说到了Asio啊，这个是干嘛用的
    它是个网络库嘛
这个网络库实现了什么功能，大概了解一下
    他有一个协程的功能，然后设计出来是一个Proactor模式吧
    我这边发送一个异步的请求，比如我要读数据读到哪个缓冲区，发完之后我当前这个协程就休眠，然后这个库读到这个缓冲区之后，再唤醒我的协程，继续往下执行

你们这个游戏客户端引擎是用什么做的
    是用Unity
Unity也有个协程是吧
    C#本身有个协程吧
是C#的协程还是Unity的协程
    Unity协程我不清楚
那你对Unity有一些了解吗
    没有了解
那你平时不会用Unity起客户端调试一下
    最多就是用来运行客户端吧，但我们平时服务器协议测试会有一个协议测试机器人，可以对机器人写一些脚本向我们服务器发请求

那这个协议测试机器人是什么，Python写的吗
    它原来是C++写的，我后来是把它改成了Python
就每个人在自己机器上运行是吗，然后完成自动登录，去发协议。就每个人要自己去改了
你为什么要改成Python呢，这个是有需求吗
    就是有痛点吧，因为这个机器人编译的话要先吧proto编译成cpp，cpp本身又要编译一遍，这个编译时间差不多会有10分钟吧，这个很慢
    因为协议变得是比较频繁的嘛，如果我像加一条新的协议去测试也是要改它的代码的，整个下来非常繁琐
    我把它改成Python代码，proto编译成Python文件它是很快的。Python本身也是个脚本语言它不用编译嘛，如果我有一些新的proto，那就直接在脚本上面改就可以了，就直接把这个编译时间给省掉了。添加新的proto也是不用再改很多东西

（整个面试70多分钟，又没有反问环节，不会要凉吧）


------
感觉大佬和我们的架构是有很大不同的，所以问了很多架构上的实现
排行榜那边可以再了解一些更多的实现，不然跳出原来的框架很难突然反应过来
六天后收到三面邀请
